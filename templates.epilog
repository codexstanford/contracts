(policy.startdate(P,S),"$P$ began on $S$")
(policy.enddate(P,E),"$P$ ended on $E$")
(policy_in_effect(P,SD,ED),"policy $P$ was in effect throughout of $SD$ to $ED$")
(duration(Z,T),"the duration of $Z$ was $T$ milliseconds")
(less(X,Y),"$X$ is less than $Y$")
(excluded(Policy, Z),"$Z$ is excluded under $Policy$")
(exclusion(P,Z,geographic),"$Z$ happened outside the $P$P's geographic area of coverage")
(exclusion(P,Z,Reason),"$Z$ is excluded under $P$: $Reason$")
(datetimetotimestamp(D,T,S),"the timestamp for date $D$ and time $T$ is $S$")
(hospitalization.startdate(Z,S),"$Z$ began on $S$")
(hospitalization.starttime(Z,T),"$Z$ began at $T$")
(hospitalization.enddate(Z,S),"$Z$ ended on $S$")
(hospitalization.endtime(Z,T),"$Z$ ended at $T$")
(hospitalization.cause(Z,preexist),"$Z$ was caused by a preexisting condition")
(hospitalization.cause(Z,C),"$Z$ was caused by $C$")
(accident.activity(C,A),"the activity in $C$ was $A$")
(same_continent(C1,C2),"$C1$ and $C2$ reside on the same continent")
(adjacent_continent_countries(C1,C2), "$C1$ and $C2$ are on adjacent continents")
(adjacent_continent(X1,X2), "$X1$ and $X2$ are adjacent")
(overlap(XS,XE,YS,YE),"[$XS$, $XE$] overlaps with [$YS$, $YE$]")
(distinct(X,Y),"$X$ is not equal to $Y$")
(evaluate(parsedate(DATE),[Y,M,D]),"$DATE$ parses as [$Y$,$M$,$D$]")
(evaluate(parsetime(TIME),[H,M,S]),"$TIME$ parses as [$H$,$M$,$S$]")
(evaluate(maketimestamp(Y,M,D,H,N,S),TS),"the timestamp for [$Y$,$M$,$D$,$H$,$N$,$S$] is $TS$")
(evaluate(min(X,Y),Z),"the minimum of $X$ and $Y$ is $Z$")
(evaluate(stringmin(X,Y),Z),"the minimum of $X$ and $Y$ is $Z$")
(evaluate(minus(X,Y),Z),"$X$ minus $Y$ is $Z$")
(countofall(E,exclusion(P,C,E),0),"no exclusion in $P$ applies to $C$")
% Procedural templates for unique attributes
(country.continent, "continent", "on which $C$ resides")
(claim.policy, "policy", "under which $C$ was filed")